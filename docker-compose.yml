version: '3.8'

services:
  # MongoDB 데이터베이스
  mongodb:
    image: mongo:7-jammy
    container_name: ai-bible-assistant-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=bible_assistant
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - bible-assistant-network

  # 백엔드 API 서버
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-bible-assistant-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/bible_assistant?authSource=admin
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongodb
    volumes:
      - ./data:/app/data:ro
    networks:
      - bible-assistant-network

  # 프론트엔드 웹 애플리케이션
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-bible-assistant-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - bible-assistant-network

  # 개발용 MongoDB Admin 인터페이스 (선택사항)
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - bible-assistant-network
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local

networks:
  bible-assistant-network:
    driver: bridge